#include <ESP8266mDNS.h>
#include <ESP8266mDNS_Legacy.h>
#include <LEAmDNS.h>
#include <LEAmDNS_lwIPdefs.h>
#include <LEAmDNS_Priv.h>

#include <ESP8266WiFi.h>
#include <DallasTemperature.h>
#include <OneWire.h>
#define ONE_WIRE_BUS 4
OneWire oneWire(ONE_WIRE_BUS);
#include <ESP8266HTTPClient.h>

DallasTemperature sensors(&oneWire);

//#include <WiFi.h>    
#include <SPI.h>
#include <Ethernet.h>
#include <Wire.h>




IPAddress server_addr(192,168,18,3);
float temperatureC;

//byte mac_addr[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED }; 
  // Database Server IP
//char user[] = "root";        // MySQL username
//char password[] = "";   // MySQL password

const char* ssid="Dotsquared";
const char* password = "DOT2012100051SQUARED";
const char *host = "192.168.18.3";

WiFiClient client;  

void setup() {
  
  
  Serial.begin(115200);
  sensors.begin();
  Serial.println();
  Serial.print("Wifi connecting to ");
  Serial.println( ssid );

  WiFi.begin(ssid,password);

   while( WiFi.status() != WL_CONNECTED ){
      delay(1000);
      Serial.print(".");    

   }
  Serial.println();
  Serial.print("wifi connected");

  Serial.println("Server started");
  Serial.println(WiFi.localIP() );
  delay(1000);
   Serial.println("connecting......");
}

void loop() {
   //HTTPClient http; 
  sensors.requestTemperatures();
  temperatureC = sensors.getTempCByIndex(0);
  Serial.println("Temperature is: ");
  Serial.println(temperatureC);
  Sending_To_phpmyadmindatabase(temperatureC);
  delay(1000);
}

void Sending_To_phpmyadmindatabase(float temperatureC){
  if (client.connect(server_addr,80)) {
    Serial.println("connected");
    Serial.print("GET /vsmonitor/connect.php?temperatureC=12");
    client.print("GET /vsmonitor/connect.php?temperatureC="+String(temperatureC,1));
    Serial.println("temperature!");
    client.println("temperature="); 
    client.println(temperatureC);
    client.print(" ");
    client.println(" HTTP/1.1"); 
    client.println("Host: 192.168.18.3");
    client.println(server_addr);
    client.println("Connection: close"); 
    client.println(); 

 

  }
  else {
    Serial.println("--> connection failed\n");
  }


  Serial.println();
  delay(30000);

}